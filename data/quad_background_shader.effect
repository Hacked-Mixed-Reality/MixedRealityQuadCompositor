uniform float4x4 ViewProj;
uniform texture2d image;

sampler_state def_sampler {
    Filter   = Linear;
    AddressU = Clamp;
    AddressV = Clamp;
};

struct VertInOut {
    float4 pos : POSITION;
    float2 uv  : TEXCOORD0;
};

struct VertOut {
    float4 pos : POSITION;
    float2 uv  : TEXCOORD0;
};

VertOut VSDefault(VertInOut vert_in)
{
    VertOut vert_out;
    vert_out.pos = mul(float4(vert_in.pos.xyz, 1.0), ViewProj);
    vert_out.uv  = vert_in.uv;
    return vert_out;
}

float4 PSDrawBare(VertOut vert_in) : SV_TARGET
{
    float2 uv = vert_in.uv;

	// We're just returning the bottom left image in this shader, but full frame.

	float2 bottomLeftMinUV = float2(0.0, 0.5); // Bottom left quadrant minimum UV coordinates
	float2 bottomLeftMaxUV = float2(0.5, 1.0); // Bottom left quadrant maximum UV coordinates

	// Get the coordinates for the bottom left quadrant
	float2 bottomLeftUV = lerp(bottomLeftMinUV, bottomLeftMaxUV, uv);
	
	// Retrieve the current color of the corresponding bottom left pixel
	float4 bottomLeftPixel = image.Sample(def_sampler, bottomLeftUV);
	
	return bottomLeftPixel;
}

technique Draw
{
    pass
    {
        vertex_shader = VSDefault(vert_in);
        pixel_shader  = PSDrawBare(vert_in);
    }
}
